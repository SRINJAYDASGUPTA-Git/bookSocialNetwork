name: BSN Backend API Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - book-network/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd book-network
          ./mvnw clean compile
  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd book-network
          ./mvnw clean compile

  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Extract project version
        id: extract_version
        run: |
          cd book-network
          echo "VERSION=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate "-Dexpression=project.version" -q "-DforceStdout")" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: book-network
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
  
  
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Create deployment folder
        run: ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<EOF
          export SECRET_KEY=${{ secrets.SECRET_KEY }}
          export SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF